#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfFarmsSupplier
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="farmsDB")]
	public partial class DataLINQtoSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertSuppliers(Suppliers instance);
    partial void UpdateSuppliers(Suppliers instance);
    partial void DeleteSuppliers(Suppliers instance);
    partial void InsertSuppliersVedio(SuppliersVedio instance);
    partial void UpdateSuppliersVedio(SuppliersVedio instance);
    partial void DeleteSuppliersVedio(SuppliersVedio instance);
    #endregion
		
		public DataLINQtoSQLDataContext() : 
				base(global::WpfFarmsSupplier.Properties.Settings.Default.farmsDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQtoSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQtoSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQtoSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLINQtoSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Suppliers> Suppliers
		{
			get
			{
				return this.GetTable<Suppliers>();
			}
		}
		
		public System.Data.Linq.Table<SuppliersVedio> SuppliersVedio
		{
			get
			{
				return this.GetTable<SuppliersVedio>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Suppliers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _SupplierName;
		
		private string _ContactName1;
		
		private string _ContactName2;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _LineID;
		
		private string _email1;
		
		private string _email2;
		
		private string _PostalCode;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private System.Nullable<int> _LastUpdateUserID;
		
		private EntitySet<SuppliersVedio> _SuppliersVedio;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnContactName1Changing(string value);
    partial void OnContactName1Changed();
    partial void OnContactName2Changing(string value);
    partial void OnContactName2Changed();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnLineIDChanging(string value);
    partial void OnLineIDChanged();
    partial void Onemail1Changing(string value);
    partial void Onemail1Changed();
    partial void Onemail2Changing(string value);
    partial void Onemail2Changed();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateUserIDChanging(System.Nullable<int> value);
    partial void OnLastUpdateUserIDChanged();
    #endregion
		
		public Suppliers()
		{
			this._SuppliersVedio = new EntitySet<SuppliersVedio>(new Action<SuppliersVedio>(this.attach_SuppliersVedio), new Action<SuppliersVedio>(this.detach_SuppliersVedio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName1", DbType="NVarChar(50)")]
		public string ContactName1
		{
			get
			{
				return this._ContactName1;
			}
			set
			{
				if ((this._ContactName1 != value))
				{
					this.OnContactName1Changing(value);
					this.SendPropertyChanging();
					this._ContactName1 = value;
					this.SendPropertyChanged("ContactName1");
					this.OnContactName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName2", DbType="NVarChar(50)")]
		public string ContactName2
		{
			get
			{
				return this._ContactName2;
			}
			set
			{
				if ((this._ContactName2 != value))
				{
					this.OnContactName2Changing(value);
					this.SendPropertyChanging();
					this._ContactName2 = value;
					this.SendPropertyChanged("ContactName2");
					this.OnContactName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(20)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineID", DbType="NVarChar(50)")]
		public string LineID
		{
			get
			{
				return this._LineID;
			}
			set
			{
				if ((this._LineID != value))
				{
					this.OnLineIDChanging(value);
					this.SendPropertyChanging();
					this._LineID = value;
					this.SendPropertyChanged("LineID");
					this.OnLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email1
		{
			get
			{
				return this._email1;
			}
			set
			{
				if ((this._email1 != value))
				{
					this.Onemail1Changing(value);
					this.SendPropertyChanging();
					this._email1 = value;
					this.SendPropertyChanged("email1");
					this.Onemail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email2", DbType="NVarChar(50)")]
		public string email2
		{
			get
			{
				return this._email2;
			}
			set
			{
				if ((this._email2 != value))
				{
					this.Onemail2Changing(value);
					this.SendPropertyChanging();
					this._email2 = value;
					this.SendPropertyChanged("email2");
					this.Onemail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateUserID", DbType="Int")]
		public System.Nullable<int> LastUpdateUserID
		{
			get
			{
				return this._LastUpdateUserID;
			}
			set
			{
				if ((this._LastUpdateUserID != value))
				{
					this.OnLastUpdateUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateUserID = value;
					this.SendPropertyChanged("LastUpdateUserID");
					this.OnLastUpdateUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suppliers_SuppliersVedio", Storage="_SuppliersVedio", ThisKey="SupplierID", OtherKey="SuppliersID")]
		public EntitySet<SuppliersVedio> SuppliersVedio
		{
			get
			{
				return this._SuppliersVedio;
			}
			set
			{
				this._SuppliersVedio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SuppliersVedio(SuppliersVedio entity)
		{
			this.SendPropertyChanging();
			entity.Suppliers = this;
		}
		
		private void detach_SuppliersVedio(SuppliersVedio entity)
		{
			this.SendPropertyChanging();
			entity.Suppliers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuppliersVedio")]
	public partial class SuppliersVedio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuppliersStoryID;
		
		private System.Nullable<int> _SuppliersID;
		
		private string _SuppliersStoryTitle;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedUserID;
		
		private System.DateTime _LastUpdateDate;
		
		private int _LastUpdateUserID;
		
		private EntityRef<Suppliers> _Suppliers;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuppliersStoryIDChanging(int value);
    partial void OnSuppliersStoryIDChanged();
    partial void OnSuppliersIDChanging(System.Nullable<int> value);
    partial void OnSuppliersIDChanged();
    partial void OnSuppliersStoryTitleChanging(string value);
    partial void OnSuppliersStoryTitleChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(int value);
    partial void OnCreatedUserIDChanged();
    partial void OnLastUpdateDateChanging(System.DateTime value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateUserIDChanging(int value);
    partial void OnLastUpdateUserIDChanged();
    #endregion
		
		public SuppliersVedio()
		{
			this._Suppliers = default(EntityRef<Suppliers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppliersStoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SuppliersStoryID
		{
			get
			{
				return this._SuppliersStoryID;
			}
			set
			{
				if ((this._SuppliersStoryID != value))
				{
					this.OnSuppliersStoryIDChanging(value);
					this.SendPropertyChanging();
					this._SuppliersStoryID = value;
					this.SendPropertyChanged("SuppliersStoryID");
					this.OnSuppliersStoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppliersID", DbType="Int")]
		public System.Nullable<int> SuppliersID
		{
			get
			{
				return this._SuppliersID;
			}
			set
			{
				if ((this._SuppliersID != value))
				{
					if (this._Suppliers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSuppliersIDChanging(value);
					this.SendPropertyChanging();
					this._SuppliersID = value;
					this.SendPropertyChanged("SuppliersID");
					this.OnSuppliersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppliersStoryTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SuppliersStoryTitle
		{
			get
			{
				return this._SuppliersStoryTitle;
			}
			set
			{
				if ((this._SuppliersStoryTitle != value))
				{
					this.OnSuppliersStoryTitleChanging(value);
					this.SendPropertyChanging();
					this._SuppliersStoryTitle = value;
					this.SendPropertyChanged("SuppliersStoryTitle");
					this.OnSuppliersStoryTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int NOT NULL")]
		public int CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateUserID", DbType="Int NOT NULL")]
		public int LastUpdateUserID
		{
			get
			{
				return this._LastUpdateUserID;
			}
			set
			{
				if ((this._LastUpdateUserID != value))
				{
					this.OnLastUpdateUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateUserID = value;
					this.SendPropertyChanged("LastUpdateUserID");
					this.OnLastUpdateUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suppliers_SuppliersVedio", Storage="_Suppliers", ThisKey="SuppliersID", OtherKey="SupplierID", IsForeignKey=true)]
		public Suppliers Suppliers
		{
			get
			{
				return this._Suppliers.Entity;
			}
			set
			{
				Suppliers previousValue = this._Suppliers.Entity;
				if (((previousValue != value) 
							|| (this._Suppliers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Suppliers.Entity = null;
						previousValue.SuppliersVedio.Remove(this);
					}
					this._Suppliers.Entity = value;
					if ((value != null))
					{
						value.SuppliersVedio.Add(this);
						this._SuppliersID = value.SupplierID;
					}
					else
					{
						this._SuppliersID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Suppliers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
